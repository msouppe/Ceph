---
# Defines deployment design and assigns role to server groups
- include: purge_cluster.yml

- hosts:
  - mons
  - osds

  gather_facts: false
  any_errors_fatal: true
  become: true

  tags:
    - always

  vars:
    delegate_facts_host: True

  pre_tasks:
    # If we can't get python2 installed before any module is used we will fail
    # so just try what we can to get it installed
    - name: check for python2
      stat:
        path: /usr/bin/python
      ignore_errors: yes
      register: systempython2

    - name: install python2 for debian based systems
      raw: sudo apt-get -y install python-simplejson
      ignore_errors: yes
      when:
        - systempython2.stat is undefined or systempython2.stat.exists == false

    - name: install python2 for fedora
      raw: sudo dnf -y install python creates=/usr/bin/python
      ignore_errors: yes
      when:
        - systempython2.stat is undefined or systempython2.stat.exists == false

    - name: install python2 for opensuse
      raw: sudo zypper -n install python-base creates=/usr/bin/python2.7
      ignore_errors: yes
      when:
        - systempython2.stat is undefined or systempython2.stat.exists == false

    - name: gather facts
      setup:
      when:
        - not delegate_facts_host | bool

    - name: gather and delegate facts
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      with_items: "{{ groups['all'] }}"
      run_once: true
      when:
        - delegate_facts_host | bool

    - name: install required packages for fedora > 23
      raw: sudo dnf -y install python2-dnf libselinux-python ntp
      when:
        - ansible_distribution == 'Fedora'
        - ansible_distribution_major_version|int >= 23

  roles:
    - ceph-defaults
    - ceph-facts
    - ceph-validate
    - ceph-infra


- hosts: mons
  gather_facts: false
  become: True
  any_errors_fatal: true
  pre_tasks:
    - name: set ceph monitor install 'In Progress'
      run_once: true
      set_stats:
        data:
          installer_phase_ceph_mon:
            status: "In Progress"
            start: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"
  roles:
    - role: ceph-defaults
      tags: ['ceph_update_config']
    - role: ceph-facts
      tags: ['ceph_update_config']
    - role: ceph-handler
    - role: ceph-common
    - role: ceph-config
      tags: ['ceph_update_config']
    - role: ceph-mon
  post_tasks:
    - name: set ceph monitor install 'Complete'
      run_once: true
      set_stats:
        data:
          installer_phase_ceph_mon:
            status: "Complete"
            end: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"

- hosts: osds
  gather_facts: false
  become: True
  any_errors_fatal: true
  pre_tasks:
    - name: set ceph osd install 'In Progress'
      run_once: true
      set_stats:
        data:
          installer_phase_ceph_osd:
            status: "In Progress"
            start: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"
  roles:
    - role: ceph-defaults
      tags: ['ceph_update_config']
    - role: ceph-facts
      tags: ['ceph_update_config']
    - role: ceph-handler
    - role: ceph-common
    - role: ceph-config
      tags: ['ceph_update_config']
    - role: ceph-osd
  post_tasks:
    - name: set ceph osd install 'Complete'
      run_once: true
      set_stats:
        data:
          installer_phase_ceph_osd:
            status: "Complete"
            end: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"

- hosts: mons
  gather_facts: false
  become: True
  any_errors_fatal: true
  roles:
    - role: ceph-defaults
  post_tasks:
    - name: get ceph status from the first monitor
      command: ceph --cluster {{ cluster }} -s
      register: ceph_status
      changed_when: false
      delegate_to: "{{ groups[mon_group_name][0] }}"
      run_once: true

    - name: "show ceph status for cluster {{ cluster }}"
      debug:
        msg: "{{ ceph_status.stdout_lines }}"
      delegate_to: "{{ groups[mon_group_name][0] }}"
      run_once: true
      when: not ceph_status.failed